## Get Example Using `include`

```shell
curl "<%= config[:endpoint] %>order/<%= config[:example_order] %>?include=orderProduct.product" \
  -H "Accept: application/vnd.api+json" \
  -H "Authorization: Bearer <%= config[:example_token] %>"
```

> By using the query string `include=orderProduct.product`, the response will be appended with:

<%= partial "includes/order/get_example_include_json.md.erb" %>

When using for instance `include=orderProduct.product`, the response will append an `"included"` array featuring both `orderProduct` and it's relationship of `product` related to fetched `order`. These resources has `"attributes"` and `"relationships"` as if they were fetched specifically. The same logic will be applied both when fetching a specific or several resources. 

This is a structure enforced by the [JSON:API](#json-api) specifications to avoid repeating the same resource several times in an response. However this might also requires some mapping on the client side. One approach is to map `"type"` as object key with `"id"` as object key inside that and access a resource like `included['product']['2']`. 

The obvious reason to utilize `include` is to avoid doing a bunch of follow up requests to complete the relationships data. Avoid using it however when the extra data is irrelevant, since it will increase response time. 
